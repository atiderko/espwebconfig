<!DOCTYPE html>
<html lang="en">
  <head>
    <meta
      name="viewport"
      charset="UTF-8"
      content="width=device-width, initial-scale=1, user-scalable=yes"
    />
    <title>MQTT Setup</title>
    <link rel="stylesheet" href="/css/base.css" />
    <script src="/js/pre.js"></script>
  </head>

  <body style="padding-top: 58px">
    <div id="header"></div>
    <div id="base-panel-status" class="base-panel" hidden>
      <div class="line_named" id="lbl_status">Status</div>
      <div id="mqtt_state"></div>
    </div>
    <div id="loader" class="loader"></div>
    <div id="base-panel" class="base-panel" hidden>
      <form action="/mqtt/config/save" method="post">
        <div class="noorder">
          <div class="line_named" id="lbl_settings">Settings</div>
          <div>
            <input
              id="mqtt_enabled"
              type="checkbox"
              name="mqtt_enabled"
              value="true"
              onclick="vsw(this.checked, 'exp');"
            />
            <label id="lbl_mqtt_enabled">Enable MQTT</label>
          </div>
          <div class="exp">
            <div>
              <label id="lbl_mqtt_server" for="mqtt_server">Server</label>
              <input
                id="mqtt_server"
                type="text"
                name="mqtt_server"
                placeholder="address"
              />
            </div>
            <div>
              <label id="lbl_mqtt_port" for="mqtt_port">Port</label>
              <input
                id="mqtt_port"
                type="text"
                name="mqtt_port"
                pattern="^((6553[0-5])|(655[0-2][0-9])|(65[0-4][0-9]{2})|(6[0-4][0-9]{3})|([1-5][0-9]{4})|([0-5]{0,5})|([0-9]{1,4}))$"
                placeholder="1883"
              />
            </div>
            <div>
              <label id="lbl_user" for="mqtt_user">User</label>
              <input
                id="mqtt_user"
                type="text"
                name="mqtt_user"
                placeholder="user"
              />
            </div>
            <div>
              <label id="lbl_passphrase" for="mqtt_pass">Password</label>
              <input
                id="mqtt_pass"
                type="password"
                name="mqtt_pass"
                placeholder="passphrase"
              />
              <input
                id="httpass-status"
                class="pwdcb"
                type="checkbox"
                aria-hidden="true"
                onClick="viewPassword('mqtt_pass', '')"
              />
            </div>
            <div>
              <label id="lbl_mqtt_prefix" for="mqtt_prefix">
                Discovery Prefix
              </label>
              <input
                id="mqtt_prefix"
                type="text"
                name="mqtt_prefix"
                placeholder="ewc"
              />
              <!--label id="info_mqtt_prefix">Optional: </label-->
            </div>
          </div>
        </div>
        <input id="npt_apply" type="submit" name="apply" value="Apply" />
      </form>
    </div>

    <script>
      jsons = [
        ["/mqtt/state.json", "mqttState"],
        ["/mqtt/config.json", "fillMqttConfig"],
      ];
    </script>
    <script src="/js/postload.js"></script>
    <script type="text/javascript">
      function fillMqttConfig(data, url) {
        document.getElementById("mqtt_enabled").checked =
          data["mqtt"]["enabled"];
        vsw(data["mqtt"]["enabled"], "exp");
        ["server", "port", "user", "pass", "prefix"].forEach(function (
          id,
          idy,
          arr
        ) {
          document.getElementById("mqtt_" + id).value = data["mqtt"][id];
        });
        document.getElementById("loader").hidden = true;
        document.getElementById("base-panel").hidden = false;
      }
    </script>
    <script>
      function mqttState(data, uri) {
        console.log("load mqtt state " + uri);
        hh =
          '<label id="mqtt_server" style="color:black;">[' +
          data["server"] +
          ":" +
          data["port"] +
          "]: </label>";
        if (data["enabled"]) {
          if (data["connecting"] && !data["connected"]) {
            hh +=
              '<label id="lbl_connecting" style="color:black;">connecting... </label>';
          } else if (data["connected"]) {
            hh +=
              '<label id="lbl_connected" style="color:green;">connected </label>';
          } else if (data["failed"]) {
            hh += '<label id="mqtt_failed" style="color:red;">failed</label>';
            if (data["reason"].length > 0) {
              hh +=
                '<label style="color:red;"> - ' + data["reason"] + "</label>";
            }
          }
        } else {
          hh =
            '<label id="mqtt_disabled" style="color:orange;">MQTT disabled</label>';
        }
        document.getElementById("mqtt_state").innerHTML = hh;
        updateLanguageKeys([
          "mqtt_disabled",
          "lbl_connecting",
          "lbl_connected",
          "mqtt_failed",
        ]);
        document.getElementById("base-panel-status").hidden = false;
      }
    </script>
  </body>
</html>
